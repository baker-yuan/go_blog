// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"kratos-layout/internal/biz"
	"kratos-layout/internal/data"
	"kratos-layout/internal/server"
	"kratos-layout/internal/service"
	server2 "trpc.group/trpc-go/trpc-go/server"
)

import (
	_ "trpc.group/trpc-go/trpc-filter/debuglog"
	_ "trpc.group/trpc-go/trpc-filter/recovery"
	_ "trpc.group/trpc-go/trpc-filter/validation"
	_ "trpc.group/trpc-go/trpc-naming-polarismesh"
)

// Injectors from wire.go:

// wireApp 初始化应用
func wireApp() (*App, error) {
	dataData, err := data.NewData()
	if err != nil {
		return nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo)
	greeterService := service.NewGreeterService(greeterUsecase)
	serverServer := server.NewTRPCServer(greeterService)
	app := newApp(serverServer)
	return app, nil
}

// wire.go:

type App struct {
	trpcServer *server2.Server
}

func newApp(trpcServer *server2.Server) *App {
	return &App{
		trpcServer: trpcServer,
	}
}

func (app *App) Run() error {

	return app.trpcServer.Serve()
}
