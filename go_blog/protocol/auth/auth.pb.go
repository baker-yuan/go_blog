// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: auth/auth.proto

package auth

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "trpc.group/trpc/trpc-protocol/pb/go/trpc/proto"
	_ "trpc.group/trpc/trpc-protocol/pb/go/trpc/swagger"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 资源类型
type ResourceType int32

const (
	ResourceType_RT_UNKNOWN  ResourceType = 0 // 未知
	ResourceType_TB_MENU     ResourceType = 1 // 菜单
	ResourceType_TB_RESOURCE ResourceType = 2 // 接口
	ResourceType_TB_Role     ResourceType = 3 // 角色
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RT_UNKNOWN",
		1: "TB_MENU",
		2: "TB_RESOURCE",
		3: "TB_Role",
	}
	ResourceType_value = map[string]int32{
		"RT_UNKNOWN":  0,
		"TB_MENU":     1,
		"TB_RESOURCE": 2,
		"TB_Role":     3,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_auth_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_auth_auth_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{0}
}

// ResourceType 资源类型枚举
type ResourceResourceType int32

const (
	ResourceResourceType_UNKNOWN_RESOURCE_TYPE ResourceResourceType = 0 // 未知类型
	ResourceResourceType_DIRECTORY             ResourceResourceType = 1 // 目录
	ResourceResourceType_INTERFACE             ResourceResourceType = 2 // 接口
)

// Enum value maps for ResourceResourceType.
var (
	ResourceResourceType_name = map[int32]string{
		0: "UNKNOWN_RESOURCE_TYPE",
		1: "DIRECTORY",
		2: "INTERFACE",
	}
	ResourceResourceType_value = map[string]int32{
		"UNKNOWN_RESOURCE_TYPE": 0,
		"DIRECTORY":             1,
		"INTERFACE":             2,
	}
)

func (x ResourceResourceType) Enum() *ResourceResourceType {
	p := new(ResourceResourceType)
	*p = x
	return p
}

func (x ResourceResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_auth_proto_enumTypes[1].Descriptor()
}

func (ResourceResourceType) Type() protoreflect.EnumType {
	return &file_auth_auth_proto_enumTypes[1]
}

func (x ResourceResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceResourceType.Descriptor instead.
func (ResourceResourceType) EnumDescriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{1}
}

// Status 接口状态枚举
type ResourceStatus int32

const (
	ResourceStatus_UNPUBLISHED ResourceStatus = 0 // 未发布
	ResourceStatus_PUBLISHED   ResourceStatus = 1 // 已发布
	ResourceStatus_OFFLINE     ResourceStatus = 2 // 以下线
)

// Enum value maps for ResourceStatus.
var (
	ResourceStatus_name = map[int32]string{
		0: "UNPUBLISHED",
		1: "PUBLISHED",
		2: "OFFLINE",
	}
	ResourceStatus_value = map[string]int32{
		"UNPUBLISHED": 0,
		"PUBLISHED":   1,
		"OFFLINE":     2,
	}
)

func (x ResourceStatus) Enum() *ResourceStatus {
	p := new(ResourceStatus)
	*p = x
	return p
}

func (x ResourceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_auth_proto_enumTypes[2].Descriptor()
}

func (ResourceStatus) Type() protoreflect.EnumType {
	return &file_auth_auth_proto_enumTypes[2]
}

func (x ResourceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceStatus.Descriptor instead.
func (ResourceStatus) EnumDescriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{2}
}

// 定义是否需要登录校验的枚举
type NeedLogin int32

const (
	NeedLogin_LOGIN_NOT_REQUIRED NeedLogin = 0 // 不需要登录校验
	NeedLogin_LOGIN_REQUIRED     NeedLogin = 1 // 需要登录校验
)

// Enum value maps for NeedLogin.
var (
	NeedLogin_name = map[int32]string{
		0: "LOGIN_NOT_REQUIRED",
		1: "LOGIN_REQUIRED",
	}
	NeedLogin_value = map[string]int32{
		"LOGIN_NOT_REQUIRED": 0,
		"LOGIN_REQUIRED":     1,
	}
)

func (x NeedLogin) Enum() *NeedLogin {
	p := new(NeedLogin)
	*p = x
	return p
}

func (x NeedLogin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NeedLogin) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_auth_proto_enumTypes[3].Descriptor()
}

func (NeedLogin) Type() protoreflect.EnumType {
	return &file_auth_auth_proto_enumTypes[3]
}

func (x NeedLogin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NeedLogin.Descriptor instead.
func (NeedLogin) EnumDescriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{3}
}

// 定义是否需要权限校验的枚举
type NeedPermission int32

const (
	NeedPermission_PERMISSION_NOT_REQUIRED NeedPermission = 0 // 不需要权限校验
	NeedPermission_PERMISSION_REQUIRED     NeedPermission = 1 // 需要权限校验
)

// Enum value maps for NeedPermission.
var (
	NeedPermission_name = map[int32]string{
		0: "PERMISSION_NOT_REQUIRED",
		1: "PERMISSION_REQUIRED",
	}
	NeedPermission_value = map[string]int32{
		"PERMISSION_NOT_REQUIRED": 0,
		"PERMISSION_REQUIRED":     1,
	}
)

func (x NeedPermission) Enum() *NeedPermission {
	p := new(NeedPermission)
	*p = x
	return p
}

func (x NeedPermission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NeedPermission) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_auth_proto_enumTypes[4].Descriptor()
}

func (NeedPermission) Type() protoreflect.EnumType {
	return &file_auth_auth_proto_enumTypes[4]
}

func (x NeedPermission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NeedPermission.Descriptor instead.
func (NeedPermission) EnumDescriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{4}
}

// 空响应
type EmptyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRsp) Reset() {
	*x = EmptyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRsp) ProtoMessage() {}

func (x *EmptyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRsp.ProtoReflect.Descriptor instead.
func (*EmptyRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{0}
}

// 添加修改资源返回值
type AddOrUpdateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 资源id
}

func (x *AddOrUpdateRsp) Reset() {
	*x = AddOrUpdateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateRsp) ProtoMessage() {}

func (x *AddOrUpdateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateRsp.ProtoReflect.Descriptor instead.
func (*AddOrUpdateRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{1}
}

func (x *AddOrUpdateRsp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 菜单资源信息定义
type Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // ID
	ParentId  uint32 `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // 父级菜单id
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                             // 菜单名称
	Icon      string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`                             // 菜单图标
	Describe  string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`                     // 功能描述
	SortValue uint32 `protobuf:"varint,6,opt,name=sort_value,json=sortValue,proto3" json:"sort_value,omitempty"` // 排序
	// 前端
	Path      string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`           // 对应路由path
	Component string `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"` // 对应路由组件component
	// 状态
	IsHidden bool `protobuf:"varint,9,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"` // 是否隐藏
	// 公共字段
	CreateUser uint32 `protobuf:"varint,10,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"` // 创建人id
	UpdateUser uint32 `protobuf:"varint,11,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"` // 更新人id
	CreateTime uint32 `protobuf:"varint,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	UpdateTime uint32 `protobuf:"varint,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 更新时间
}

func (x *Menu) Reset() {
	*x = Menu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Menu) ProtoMessage() {}

func (x *Menu) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Menu.ProtoReflect.Descriptor instead.
func (*Menu) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{2}
}

func (x *Menu) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Menu) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Menu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Menu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Menu) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *Menu) GetSortValue() uint32 {
	if x != nil {
		return x.SortValue
	}
	return 0
}

func (x *Menu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Menu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *Menu) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *Menu) GetCreateUser() uint32 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *Menu) GetUpdateUser() uint32 {
	if x != nil {
		return x.UpdateUser
	}
	return 0
}

func (x *Menu) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Menu) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 菜单搜索
type SearchMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search   string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`                        // 查询条件 {a:?,b:?}
	PageNum  uint32 `protobuf:"varint,100,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    // 分页查询
	PageSize uint32 `protobuf:"varint,101,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 分页查询
}

func (x *SearchMenuReq) Reset() {
	*x = SearchMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMenuReq) ProtoMessage() {}

func (x *SearchMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMenuReq.ProtoReflect.Descriptor instead.
func (*SearchMenuReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{3}
}

func (x *SearchMenuReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *SearchMenuReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchMenuReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchMenuRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 分页查询
	Data  []*Menu `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`    // 菜单集合
}

func (x *SearchMenuRsp) Reset() {
	*x = SearchMenuRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMenuRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMenuRsp) ProtoMessage() {}

func (x *SearchMenuRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMenuRsp.ProtoReflect.Descriptor instead.
func (*SearchMenuRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{4}
}

func (x *SearchMenuRsp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchMenuRsp) GetData() []*Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

// 菜单详情
type MenuDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 编号
}

func (x *MenuDetailReq) Reset() {
	*x = MenuDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuDetailReq) ProtoMessage() {}

func (x *MenuDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuDetailReq.ProtoReflect.Descriptor instead.
func (*MenuDetailReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{5}
}

func (x *MenuDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 添加修改菜单
type AddOrUpdateMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // ID
	ParentId  uint32 `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // 父级菜单id
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                             // 菜单名称
	Icon      string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`                             // 菜单图标
	Describe  string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`                     // 功能描述
	SortValue uint32 `protobuf:"varint,6,opt,name=sort_value,json=sortValue,proto3" json:"sort_value,omitempty"` // 排序
	// 前端
	Path      string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`           // 对应路由path
	Component string `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"` // 对应路由组件component
	// 状态
	IsHidden bool `protobuf:"varint,9,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"` // 是否隐藏
}

func (x *AddOrUpdateMenuReq) Reset() {
	*x = AddOrUpdateMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateMenuReq) ProtoMessage() {}

func (x *AddOrUpdateMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateMenuReq.ProtoReflect.Descriptor instead.
func (*AddOrUpdateMenuReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{6}
}

func (x *AddOrUpdateMenuReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrUpdateMenuReq) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddOrUpdateMenuReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrUpdateMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AddOrUpdateMenuReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *AddOrUpdateMenuReq) GetSortValue() uint32 {
	if x != nil {
		return x.SortValue
	}
	return 0
}

func (x *AddOrUpdateMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddOrUpdateMenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *AddOrUpdateMenuReq) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

// 删除菜单
type DeleteMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 编号
}

func (x *DeleteMenuReq) Reset() {
	*x = DeleteMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuReq) ProtoMessage() {}

func (x *DeleteMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuReq.ProtoReflect.Descriptor instead.
func (*DeleteMenuReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMenuReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 接口信息定义
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Id           uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                // ID
	ParentId     uint32               `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`                                                    // 父接口ID
	Name         string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                             // 接口名称
	Describe     string               `protobuf:"bytes,4,opt,name=describe,proto3" json:"describe,omitempty"`                                                                     // 接口描述
	ResourceType ResourceResourceType `protobuf:"varint,5,opt,name=resource_type,json=resourceType,proto3,enum=go_blog.auth.ResourceResourceType" json:"resource_type,omitempty"` // 资源类型 1-目录 2-接口
	Status       ResourceStatus       `protobuf:"varint,6,opt,name=status,proto3,enum=go_blog.auth.ResourceStatus" json:"status,omitempty"`                                       // 接口状态 0-未发布 1-已发布 2-以下线
	// 路径定位
	Url        string `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`                                 // 接口URL
	HttpMethod string `protobuf:"bytes,8,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"` // 请求方式
	// 权限校验
	IsNeedLogin      NeedLogin      `protobuf:"varint,9,opt,name=is_need_login,json=isNeedLogin,proto3,enum=go_blog.auth.NeedLogin" json:"is_need_login,omitempty"`                      // 是否需要登录校验
	IsNeedPermission NeedPermission `protobuf:"varint,10,opt,name=is_need_permission,json=isNeedPermission,proto3,enum=go_blog.auth.NeedPermission" json:"is_need_permission,omitempty"` // 是否需要权限校验
	// 下游服务信息
	Service string `protobuf:"bytes,11,opt,name=service,proto3" json:"service,omitempty"` // API服务名
	Method  string `protobuf:"bytes,12,opt,name=method,proto3" json:"method,omitempty"`   // API接口名
	// 公共字段
	CreateUser uint32 `protobuf:"varint,13,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"` // 创建人id
	UpdateUser uint32 `protobuf:"varint,14,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"` // 更新人id
	CreateTime uint32 `protobuf:"varint,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	UpdateTime uint32 `protobuf:"varint,16,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 更新时间
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{8}
}

func (x *Resource) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Resource) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *Resource) GetResourceType() ResourceResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceResourceType_UNKNOWN_RESOURCE_TYPE
}

func (x *Resource) GetStatus() ResourceStatus {
	if x != nil {
		return x.Status
	}
	return ResourceStatus_UNPUBLISHED
}

func (x *Resource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Resource) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *Resource) GetIsNeedLogin() NeedLogin {
	if x != nil {
		return x.IsNeedLogin
	}
	return NeedLogin_LOGIN_NOT_REQUIRED
}

func (x *Resource) GetIsNeedPermission() NeedPermission {
	if x != nil {
		return x.IsNeedPermission
	}
	return NeedPermission_PERMISSION_NOT_REQUIRED
}

func (x *Resource) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Resource) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Resource) GetCreateUser() uint32 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *Resource) GetUpdateUser() uint32 {
	if x != nil {
		return x.UpdateUser
	}
	return 0
}

func (x *Resource) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Resource) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 接口搜索
type SearchResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search   string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`                        // 查询条件 {a:?,b:?}
	PageNum  uint32 `protobuf:"varint,100,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    // 分页查询
	PageSize uint32 `protobuf:"varint,101,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 分页查询
}

func (x *SearchResourceReq) Reset() {
	*x = SearchResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResourceReq) ProtoMessage() {}

func (x *SearchResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResourceReq.ProtoReflect.Descriptor instead.
func (*SearchResourceReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{9}
}

func (x *SearchResourceReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *SearchResourceReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchResourceReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchResourceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 分页查询
	Data  []*Resource `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`    // 接口集合
}

func (x *SearchResourceRsp) Reset() {
	*x = SearchResourceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResourceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResourceRsp) ProtoMessage() {}

func (x *SearchResourceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResourceRsp.ProtoReflect.Descriptor instead.
func (*SearchResourceRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{10}
}

func (x *SearchResourceRsp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchResourceRsp) GetData() []*Resource {
	if x != nil {
		return x.Data
	}
	return nil
}

// 接口详情
type ResourceDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 编号
}

func (x *ResourceDetailReq) Reset() {
	*x = ResourceDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDetailReq) ProtoMessage() {}

func (x *ResourceDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDetailReq.ProtoReflect.Descriptor instead.
func (*ResourceDetailReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{11}
}

func (x *ResourceDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 添加修改接口
type AddOrUpdateResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Id           uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                // ID
	ParentId     uint32               `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`                                                    // 父接口ID
	Name         string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                             // 接口名称
	Describe     string               `protobuf:"bytes,4,opt,name=describe,proto3" json:"describe,omitempty"`                                                                     // 接口描述
	ResourceType ResourceResourceType `protobuf:"varint,5,opt,name=resource_type,json=resourceType,proto3,enum=go_blog.auth.ResourceResourceType" json:"resource_type,omitempty"` // 资源类型 1-目录 2-接口
	Status       ResourceStatus       `protobuf:"varint,6,opt,name=status,proto3,enum=go_blog.auth.ResourceStatus" json:"status,omitempty"`                                       // 接口状态 0-未发布 1-已发布 2-以下线
	// 路径定位
	Url        string `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`                                 // 接口URL
	HttpMethod string `protobuf:"bytes,8,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"` // 请求方式
	// 权限校验
	IsNeedLogin      NeedLogin      `protobuf:"varint,9,opt,name=is_need_login,json=isNeedLogin,proto3,enum=go_blog.auth.NeedLogin" json:"is_need_login,omitempty"`                      // 是否需要登录校验
	IsNeedPermission NeedPermission `protobuf:"varint,10,opt,name=is_need_permission,json=isNeedPermission,proto3,enum=go_blog.auth.NeedPermission" json:"is_need_permission,omitempty"` // 是否需要权限校验
	// 下游服务信息
	Service string `protobuf:"bytes,11,opt,name=service,proto3" json:"service,omitempty"` // API服务名
	Method  string `protobuf:"bytes,12,opt,name=method,proto3" json:"method,omitempty"`   // API接口名
}

func (x *AddOrUpdateResourceReq) Reset() {
	*x = AddOrUpdateResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateResourceReq) ProtoMessage() {}

func (x *AddOrUpdateResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateResourceReq.ProtoReflect.Descriptor instead.
func (*AddOrUpdateResourceReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{12}
}

func (x *AddOrUpdateResourceReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrUpdateResourceReq) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddOrUpdateResourceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrUpdateResourceReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *AddOrUpdateResourceReq) GetResourceType() ResourceResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceResourceType_UNKNOWN_RESOURCE_TYPE
}

func (x *AddOrUpdateResourceReq) GetStatus() ResourceStatus {
	if x != nil {
		return x.Status
	}
	return ResourceStatus_UNPUBLISHED
}

func (x *AddOrUpdateResourceReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddOrUpdateResourceReq) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *AddOrUpdateResourceReq) GetIsNeedLogin() NeedLogin {
	if x != nil {
		return x.IsNeedLogin
	}
	return NeedLogin_LOGIN_NOT_REQUIRED
}

func (x *AddOrUpdateResourceReq) GetIsNeedPermission() NeedPermission {
	if x != nil {
		return x.IsNeedPermission
	}
	return NeedPermission_PERMISSION_NOT_REQUIRED
}

func (x *AddOrUpdateResourceReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *AddOrUpdateResourceReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

// 删除接口
type DeleteResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 编号
}

func (x *DeleteResourceReq) Reset() {
	*x = DeleteResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceReq) ProtoMessage() {}

func (x *DeleteResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceReq.ProtoReflect.Descriptor instead.
func (*DeleteResourceReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteResourceReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取有效状态下的接口
type GetEffectiveResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEffectiveResourceReq) Reset() {
	*x = GetEffectiveResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEffectiveResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEffectiveResourceReq) ProtoMessage() {}

func (x *GetEffectiveResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEffectiveResourceReq.ProtoReflect.Descriptor instead.
func (*GetEffectiveResourceReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{14}
}

type GetEffectiveResourceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Resource `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // 接口集合
}

func (x *GetEffectiveResourceRsp) Reset() {
	*x = GetEffectiveResourceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEffectiveResourceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEffectiveResourceRsp) ProtoMessage() {}

func (x *GetEffectiveResourceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEffectiveResourceRsp.ProtoReflect.Descriptor instead.
func (*GetEffectiveResourceRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{15}
}

func (x *GetEffectiveResourceRsp) GetData() []*Resource {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色信息定义
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          // 角色名称
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                          // 角色编码
	Describe string `protobuf:"bytes,4,opt,name=describe,proto3" json:"describe,omitempty"`                  // 功能描述
	IsEnable bool   `protobuf:"varint,5,opt,name=is_enable,json=isEnable,proto3" json:"is_enable,omitempty"` // 是否启用
	// 公共字段
	CreateUser uint32 `protobuf:"varint,6,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"` // 创建人id
	UpdateUser uint32 `protobuf:"varint,7,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"` // 更新人id
	CreateTime uint32 `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	UpdateTime uint32 `protobuf:"varint,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 更新时间
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{16}
}

func (x *Role) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Role) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *Role) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *Role) GetCreateUser() uint32 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *Role) GetUpdateUser() uint32 {
	if x != nil {
		return x.UpdateUser
	}
	return 0
}

func (x *Role) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Role) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 角色搜索
type SearchRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search   string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`                        // 查询条件 {a:?,b:?}
	PageNum  uint32 `protobuf:"varint,100,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    // 分页查询
	PageSize uint32 `protobuf:"varint,101,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 分页查询
}

func (x *SearchRoleReq) Reset() {
	*x = SearchRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoleReq) ProtoMessage() {}

func (x *SearchRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoleReq.ProtoReflect.Descriptor instead.
func (*SearchRoleReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{17}
}

func (x *SearchRoleReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *SearchRoleReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchRoleReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 分页查询
	Data  []*Role `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`    // 角色集合
}

func (x *SearchRoleRsp) Reset() {
	*x = SearchRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoleRsp) ProtoMessage() {}

func (x *SearchRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoleRsp.ProtoReflect.Descriptor instead.
func (*SearchRoleRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{18}
}

func (x *SearchRoleRsp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchRoleRsp) GetData() []*Role {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色详情
type RoleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 编号
}

func (x *RoleDetailReq) Reset() {
	*x = RoleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDetailReq) ProtoMessage() {}

func (x *RoleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDetailReq.ProtoReflect.Descriptor instead.
func (*RoleDetailReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{19}
}

func (x *RoleDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 添加修改角色
type AddOrUpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          // 角色名称
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                          // 角色编码
	Describe string `protobuf:"bytes,4,opt,name=describe,proto3" json:"describe,omitempty"`                  // 功能描述
	IsEnable bool   `protobuf:"varint,5,opt,name=is_enable,json=isEnable,proto3" json:"is_enable,omitempty"` // 是否启用
}

func (x *AddOrUpdateRoleReq) Reset() {
	*x = AddOrUpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateRoleReq) ProtoMessage() {}

func (x *AddOrUpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateRoleReq.ProtoReflect.Descriptor instead.
func (*AddOrUpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{20}
}

func (x *AddOrUpdateRoleReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrUpdateRoleReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrUpdateRoleReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddOrUpdateRoleReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *AddOrUpdateRoleReq) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

// 删除角色
type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 编号
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteRoleReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// RoleAuthority 角色关联的资源和目录
type RoleAuthority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // ID
	AuthorityId   uint32 `protobuf:"varint,2,opt,name=authority_id,json=authorityId,proto3" json:"authority_id,omitempty"`      // 权限id
	AuthorityType string `protobuf:"bytes,3,opt,name=authority_type,json=authorityType,proto3" json:"authority_type,omitempty"` // 权限类型 MENU-菜单 RESOURCE-资源
	RoleId        uint32 `protobuf:"varint,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                     // 角色id
	CreateUser    uint32 `protobuf:"varint,5,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`         // 创建人ID
	CreateTime    uint32 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`         // 插入时间
}

func (x *RoleAuthority) Reset() {
	*x = RoleAuthority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAuthority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAuthority) ProtoMessage() {}

func (x *RoleAuthority) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAuthority.ProtoReflect.Descriptor instead.
func (*RoleAuthority) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{22}
}

func (x *RoleAuthority) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleAuthority) GetAuthorityId() uint32 {
	if x != nil {
		return x.AuthorityId
	}
	return 0
}

func (x *RoleAuthority) GetAuthorityType() string {
	if x != nil {
		return x.AuthorityType
	}
	return ""
}

func (x *RoleAuthority) GetRoleId() uint32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleAuthority) GetCreateUser() uint32 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *RoleAuthority) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// UserRole 账号角色关联
type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // ID
	RoleId     uint32 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`             // 角色ID
	UserId     uint32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户ID
	CreateUser uint32 `protobuf:"varint,4,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"` // 创建人ID
	CreateTime uint32 `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 插入时间
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{23}
}

func (x *UserRole) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserRole) GetRoleId() uint32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UserRole) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserRole) GetCreateUser() uint32 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *UserRole) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 角色绑定菜单权限
type RoleBindMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  uint32   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`           // 角色ID
	MenuIds []uint32 `protobuf:"varint,2,rep,packed,name=menu_ids,json=menuIds,proto3" json:"menu_ids,omitempty"` // 菜单ID集合
}

func (x *RoleBindMenuReq) Reset() {
	*x = RoleBindMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBindMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBindMenuReq) ProtoMessage() {}

func (x *RoleBindMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBindMenuReq.ProtoReflect.Descriptor instead.
func (*RoleBindMenuReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{24}
}

func (x *RoleBindMenuReq) GetRoleId() uint32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleBindMenuReq) GetMenuIds() []uint32 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

// 角色绑定资源权限
type RoleBindResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId      uint32   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                       // 角色ID
	ResourceIds []uint32 `protobuf:"varint,2,rep,packed,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"` // 资源ID集合
}

func (x *RoleBindResourceReq) Reset() {
	*x = RoleBindResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBindResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBindResourceReq) ProtoMessage() {}

func (x *RoleBindResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBindResourceReq.ProtoReflect.Descriptor instead.
func (*RoleBindResourceReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{25}
}

func (x *RoleBindResourceReq) GetRoleId() uint32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleBindResourceReq) GetResourceIds() []uint32 {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

// 用户绑定角色
type UserBindRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`           // 用户ID
	RoleIds []uint32 `protobuf:"varint,2,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"` // 角色ID集合
}

func (x *UserBindRoleReq) Reset() {
	*x = UserBindRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindRoleReq) ProtoMessage() {}

func (x *UserBindRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindRoleReq.ProtoReflect.Descriptor instead.
func (*UserBindRoleReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{26}
}

func (x *UserBindRoleReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserBindRoleReq) GetRoleIds() []uint32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

// 用户绑定的角色
type GetUserRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []uint32 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"` // 用户ID集合
}

func (x *GetUserRoleReq) Reset() {
	*x = GetUserRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleReq) ProtoMessage() {}

func (x *GetUserRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleReq.ProtoReflect.Descriptor instead.
func (*GetUserRoleReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{27}
}

func (x *GetUserRoleReq) GetUserIds() []uint32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetUserRoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[uint32]*Role `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 用户绑定的角色 key=用户ID value=角色集合
}

func (x *GetUserRoleRsp) Reset() {
	*x = GetUserRoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleRsp) ProtoMessage() {}

func (x *GetUserRoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleRsp.ProtoReflect.Descriptor instead.
func (*GetUserRoleRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserRoleRsp) GetData() map[uint32]*Role {
	if x != nil {
		return x.Data
	}
	return nil
}

// 用户关联的接口权限
type GetUserResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *GetUserResourceReq) Reset() {
	*x = GetUserResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResourceReq) ProtoMessage() {}

func (x *GetUserResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResourceReq.ProtoReflect.Descriptor instead.
func (*GetUserResourceReq) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserResourceReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserResourceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserResourceRsp) Reset() {
	*x = GetUserResourceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_auth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResourceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResourceRsp) ProtoMessage() {}

func (x *GetUserResourceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_auth_auth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResourceRsp.ProtoReflect.Descriptor instead.
func (*GetUserResourceRsp) Descriptor() ([]byte, []int) {
	return file_auth_auth_proto_rawDescGZIP(), []int{30}
}

var File_auth_auth_proto protoreflect.FileDescriptor

var file_auth_auth_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x74, 0x72, 0x70, 0x63, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x70, 0x63, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x77,
	0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x73, 0x70, 0x22,
	0x20, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xe9, 0x02, 0x0a, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x71, 0x0a,
	0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x4d, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x28, 0x0a, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x28,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd8, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x5f, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4e, 0x65, 0x65, 0x64, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x0b, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4e, 0x65, 0x65,
	0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x69, 0x73, 0x4e,
	0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x55, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xbb, 0x04, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x53, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x5f, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x82, 0x01, 0x04, 0x18, 0x01, 0x18, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x82, 0x01, 0x06, 0x18, 0x00, 0x18,
	0x01, 0x18, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x3b, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4e, 0x65, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x0b, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x4a, 0x0a,
	0x12, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x5f, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x2c, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfb, 0x01,
	0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4d,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a,
	0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x28, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x0f,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x0f,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x99, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4b, 0x0a, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x5f,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70, 0x2a, 0x49, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x54, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x42, 0x5f, 0x4d, 0x45,
	0x4e, 0x55, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x42, 0x5f, 0x52, 0x6f, 0x6c, 0x65,
	0x10, 0x03, 0x2a, 0x4f, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f,
	0x52, 0x59, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43,
	0x45, 0x10, 0x02, 0x2a, 0x3d, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x53, 0x48, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53,
	0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x02, 0x2a, 0x37, 0x0a, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x12, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x49, 0x4e,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x46, 0x0a, 0x0e, 0x4e,
	0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x32, 0x91, 0x0f, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x41, 0x70, 0x69, 0x12,
	0x62, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1b, 0x2e,
	0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x5f,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x73, 0x70, 0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x16, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x6d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x16, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x12, 0x5d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x73, 0x70, 0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x16, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x59, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1b, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x67,
	0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x16, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x72, 0x0a, 0x0e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f,
	0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70,
	0x22, 0x1e, 0x8a, 0xb5, 0x18, 0x1a, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x7e, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x23, 0x8a, 0xb5, 0x18,
	0x1f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x64, 0x64,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x69, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x73, 0x70, 0x22, 0x1e, 0x8a, 0xb5, 0x18,
	0x1a, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x1e, 0x8a, 0xb5, 0x18, 0x1a, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x25, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x73, 0x70, 0x22, 0x1b, 0x8a,
	0xb5, 0x18, 0x17, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x73, 0x70, 0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x16, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x72,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x73,
	0x70, 0x22, 0x1f, 0x8a, 0xb5, 0x18, 0x1b, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x73, 0x70, 0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x16, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x59, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1b, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x67,
	0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x16, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x63, 0x0a, 0x0c,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x73, 0x70, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x18, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x6f, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x73, 0x70,
	0x22, 0x20, 0x8a, 0xb5, 0x18, 0x1c, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x73, 0x70, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x18, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x42,
	0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x73, 0x70, 0x22, 0x1b, 0x8a, 0xb5, 0x18, 0x17, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x76, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x73, 0x70, 0x22, 0x1f, 0x8a, 0xb5, 0x18, 0x1b, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x6b, 0x65, 0x72, 0x2d, 0x79, 0x75, 0x61, 0x6e,
	0x2f, 0x67, 0x6f, 0x2d, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_auth_proto_rawDescOnce sync.Once
	file_auth_auth_proto_rawDescData = file_auth_auth_proto_rawDesc
)

func file_auth_auth_proto_rawDescGZIP() []byte {
	file_auth_auth_proto_rawDescOnce.Do(func() {
		file_auth_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_auth_proto_rawDescData)
	})
	return file_auth_auth_proto_rawDescData
}

var file_auth_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_auth_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_auth_auth_proto_goTypes = []interface{}{
	(ResourceType)(0),               // 0: go_blog.auth.ResourceType
	(ResourceResourceType)(0),       // 1: go_blog.auth.ResourceResourceType
	(ResourceStatus)(0),             // 2: go_blog.auth.ResourceStatus
	(NeedLogin)(0),                  // 3: go_blog.auth.NeedLogin
	(NeedPermission)(0),             // 4: go_blog.auth.NeedPermission
	(*EmptyRsp)(nil),                // 5: go_blog.auth.EmptyRsp
	(*AddOrUpdateRsp)(nil),          // 6: go_blog.auth.AddOrUpdateRsp
	(*Menu)(nil),                    // 7: go_blog.auth.Menu
	(*SearchMenuReq)(nil),           // 8: go_blog.auth.SearchMenuReq
	(*SearchMenuRsp)(nil),           // 9: go_blog.auth.SearchMenuRsp
	(*MenuDetailReq)(nil),           // 10: go_blog.auth.MenuDetailReq
	(*AddOrUpdateMenuReq)(nil),      // 11: go_blog.auth.AddOrUpdateMenuReq
	(*DeleteMenuReq)(nil),           // 12: go_blog.auth.DeleteMenuReq
	(*Resource)(nil),                // 13: go_blog.auth.Resource
	(*SearchResourceReq)(nil),       // 14: go_blog.auth.SearchResourceReq
	(*SearchResourceRsp)(nil),       // 15: go_blog.auth.SearchResourceRsp
	(*ResourceDetailReq)(nil),       // 16: go_blog.auth.ResourceDetailReq
	(*AddOrUpdateResourceReq)(nil),  // 17: go_blog.auth.AddOrUpdateResourceReq
	(*DeleteResourceReq)(nil),       // 18: go_blog.auth.DeleteResourceReq
	(*GetEffectiveResourceReq)(nil), // 19: go_blog.auth.GetEffectiveResourceReq
	(*GetEffectiveResourceRsp)(nil), // 20: go_blog.auth.GetEffectiveResourceRsp
	(*Role)(nil),                    // 21: go_blog.auth.Role
	(*SearchRoleReq)(nil),           // 22: go_blog.auth.SearchRoleReq
	(*SearchRoleRsp)(nil),           // 23: go_blog.auth.SearchRoleRsp
	(*RoleDetailReq)(nil),           // 24: go_blog.auth.RoleDetailReq
	(*AddOrUpdateRoleReq)(nil),      // 25: go_blog.auth.AddOrUpdateRoleReq
	(*DeleteRoleReq)(nil),           // 26: go_blog.auth.DeleteRoleReq
	(*RoleAuthority)(nil),           // 27: go_blog.auth.RoleAuthority
	(*UserRole)(nil),                // 28: go_blog.auth.UserRole
	(*RoleBindMenuReq)(nil),         // 29: go_blog.auth.RoleBindMenuReq
	(*RoleBindResourceReq)(nil),     // 30: go_blog.auth.RoleBindResourceReq
	(*UserBindRoleReq)(nil),         // 31: go_blog.auth.UserBindRoleReq
	(*GetUserRoleReq)(nil),          // 32: go_blog.auth.GetUserRoleReq
	(*GetUserRoleRsp)(nil),          // 33: go_blog.auth.GetUserRoleRsp
	(*GetUserResourceReq)(nil),      // 34: go_blog.auth.GetUserResourceReq
	(*GetUserResourceRsp)(nil),      // 35: go_blog.auth.GetUserResourceRsp
	nil,                             // 36: go_blog.auth.GetUserRoleRsp.DataEntry
}
var file_auth_auth_proto_depIdxs = []int32{
	7,  // 0: go_blog.auth.SearchMenuRsp.data:type_name -> go_blog.auth.Menu
	1,  // 1: go_blog.auth.Resource.resource_type:type_name -> go_blog.auth.ResourceResourceType
	2,  // 2: go_blog.auth.Resource.status:type_name -> go_blog.auth.ResourceStatus
	3,  // 3: go_blog.auth.Resource.is_need_login:type_name -> go_blog.auth.NeedLogin
	4,  // 4: go_blog.auth.Resource.is_need_permission:type_name -> go_blog.auth.NeedPermission
	13, // 5: go_blog.auth.SearchResourceRsp.data:type_name -> go_blog.auth.Resource
	1,  // 6: go_blog.auth.AddOrUpdateResourceReq.resource_type:type_name -> go_blog.auth.ResourceResourceType
	2,  // 7: go_blog.auth.AddOrUpdateResourceReq.status:type_name -> go_blog.auth.ResourceStatus
	3,  // 8: go_blog.auth.AddOrUpdateResourceReq.is_need_login:type_name -> go_blog.auth.NeedLogin
	4,  // 9: go_blog.auth.AddOrUpdateResourceReq.is_need_permission:type_name -> go_blog.auth.NeedPermission
	13, // 10: go_blog.auth.GetEffectiveResourceRsp.data:type_name -> go_blog.auth.Resource
	21, // 11: go_blog.auth.SearchRoleRsp.data:type_name -> go_blog.auth.Role
	36, // 12: go_blog.auth.GetUserRoleRsp.data:type_name -> go_blog.auth.GetUserRoleRsp.DataEntry
	21, // 13: go_blog.auth.GetUserRoleRsp.DataEntry.value:type_name -> go_blog.auth.Role
	8,  // 14: go_blog.auth.AuthApi.SearchMenu:input_type -> go_blog.auth.SearchMenuReq
	11, // 15: go_blog.auth.AuthApi.AddOrUpdateMenu:input_type -> go_blog.auth.AddOrUpdateMenuReq
	12, // 16: go_blog.auth.AuthApi.DeleteMenu:input_type -> go_blog.auth.DeleteMenuReq
	10, // 17: go_blog.auth.AuthApi.MenuDetail:input_type -> go_blog.auth.MenuDetailReq
	14, // 18: go_blog.auth.AuthApi.SearchResource:input_type -> go_blog.auth.SearchResourceReq
	17, // 19: go_blog.auth.AuthApi.AddOrUpdateResource:input_type -> go_blog.auth.AddOrUpdateResourceReq
	18, // 20: go_blog.auth.AuthApi.DeleteResource:input_type -> go_blog.auth.DeleteResourceReq
	16, // 21: go_blog.auth.AuthApi.ResourceDetail:input_type -> go_blog.auth.ResourceDetailReq
	19, // 22: go_blog.auth.AuthApi.GetEffectiveResource:input_type -> go_blog.auth.GetEffectiveResourceReq
	22, // 23: go_blog.auth.AuthApi.SearchRole:input_type -> go_blog.auth.SearchRoleReq
	25, // 24: go_blog.auth.AuthApi.AddOrUpdateRole:input_type -> go_blog.auth.AddOrUpdateRoleReq
	26, // 25: go_blog.auth.AuthApi.DeleteRole:input_type -> go_blog.auth.DeleteRoleReq
	24, // 26: go_blog.auth.AuthApi.RoleDetail:input_type -> go_blog.auth.RoleDetailReq
	29, // 27: go_blog.auth.AuthApi.RoleBindMenu:input_type -> go_blog.auth.RoleBindMenuReq
	30, // 28: go_blog.auth.AuthApi.RoleBindResource:input_type -> go_blog.auth.RoleBindResourceReq
	31, // 29: go_blog.auth.AuthApi.UserBindRole:input_type -> go_blog.auth.UserBindRoleReq
	32, // 30: go_blog.auth.AuthApi.GetUserRole:input_type -> go_blog.auth.GetUserRoleReq
	34, // 31: go_blog.auth.AuthApi.GetUserResource:input_type -> go_blog.auth.GetUserResourceReq
	9,  // 32: go_blog.auth.AuthApi.SearchMenu:output_type -> go_blog.auth.SearchMenuRsp
	6,  // 33: go_blog.auth.AuthApi.AddOrUpdateMenu:output_type -> go_blog.auth.AddOrUpdateRsp
	5,  // 34: go_blog.auth.AuthApi.DeleteMenu:output_type -> go_blog.auth.EmptyRsp
	7,  // 35: go_blog.auth.AuthApi.MenuDetail:output_type -> go_blog.auth.Menu
	15, // 36: go_blog.auth.AuthApi.SearchResource:output_type -> go_blog.auth.SearchResourceRsp
	6,  // 37: go_blog.auth.AuthApi.AddOrUpdateResource:output_type -> go_blog.auth.AddOrUpdateRsp
	5,  // 38: go_blog.auth.AuthApi.DeleteResource:output_type -> go_blog.auth.EmptyRsp
	13, // 39: go_blog.auth.AuthApi.ResourceDetail:output_type -> go_blog.auth.Resource
	20, // 40: go_blog.auth.AuthApi.GetEffectiveResource:output_type -> go_blog.auth.GetEffectiveResourceRsp
	23, // 41: go_blog.auth.AuthApi.SearchRole:output_type -> go_blog.auth.SearchRoleRsp
	6,  // 42: go_blog.auth.AuthApi.AddOrUpdateRole:output_type -> go_blog.auth.AddOrUpdateRsp
	5,  // 43: go_blog.auth.AuthApi.DeleteRole:output_type -> go_blog.auth.EmptyRsp
	21, // 44: go_blog.auth.AuthApi.RoleDetail:output_type -> go_blog.auth.Role
	5,  // 45: go_blog.auth.AuthApi.RoleBindMenu:output_type -> go_blog.auth.EmptyRsp
	5,  // 46: go_blog.auth.AuthApi.RoleBindResource:output_type -> go_blog.auth.EmptyRsp
	5,  // 47: go_blog.auth.AuthApi.UserBindRole:output_type -> go_blog.auth.EmptyRsp
	33, // 48: go_blog.auth.AuthApi.GetUserRole:output_type -> go_blog.auth.GetUserRoleRsp
	35, // 49: go_blog.auth.AuthApi.GetUserResource:output_type -> go_blog.auth.GetUserResourceRsp
	32, // [32:50] is the sub-list for method output_type
	14, // [14:32] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_auth_auth_proto_init() }
func file_auth_auth_proto_init() {
	if File_auth_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Menu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMenuRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResourceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEffectiveResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEffectiveResourceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAuthority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBindMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBindResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_auth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResourceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_auth_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_auth_proto_goTypes,
		DependencyIndexes: file_auth_auth_proto_depIdxs,
		EnumInfos:         file_auth_auth_proto_enumTypes,
		MessageInfos:      file_auth_auth_proto_msgTypes,
	}.Build()
	File_auth_auth_proto = out.File
	file_auth_auth_proto_rawDesc = nil
	file_auth_auth_proto_goTypes = nil
	file_auth_auth_proto_depIdxs = nil
}
