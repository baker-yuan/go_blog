syntax = "proto3";

import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = ".;pb";

// Response 请求响应
message BaseResponse {
  // 公共字段
  uint32 code = 1;      // 返回码
  string message = 2;   // 返回信息
  string trace_id = 3;  // 链路id
  string stack = 4;     // 异常堆栈
}

// 管理员登陆
message AdminLoginReq {
  string username = 1 [(validate.rules).string = {ignore_empty: false, min_len: 5, max_len: 10}]; // 用户名
  string password = 2 [(validate.rules).string = {ignore_empty: false, min_len: 5, max_len: 10}]; // 密码
}

// 管理员登陆
message AdminLoginRsp {
  // 公共字段
  uint32 code = 1;      // 返回码
  string message = 2;   // 返回信息
  string trace_id = 3;  // 链路id
  string stack = 4;     // 异常堆栈
  // 数据
  UserDetail data = 5;  // 用户信息
}


// 用户信息
message UserDetail {
  // 用户信息
  uint32 id = 1;            // 用户账号id
  string email = 2;         // 邮箱号
  string nickname = 3;      // 用户昵称
  string avatar = 4;        // 用户头像
  string intro = 5;         // 用户简介
  string web_site = 6;      // 个人网站
  uint32 is_disable = 7;    // 是否禁用

  // 用户账号
  string username = 8;            // 用户名
  uint32 login_type = 9;         // 登录方式
  string ip_address = 10;         // 用户登录ip
  string ip_source = 11;          // ip来源
  uint32 last_login_time = 12;    // 最近登录时间

  // 权限
  repeated string role_list = 13;  // 用户角色

  // 其他
  string browser = 14;             // 浏览器
  string os = 15;                  // 操作系统
}


// 管理员修改密码
message AdminUpdatePwdReq {
  string old_password = 1 [(validate.rules).string = {ignore_empty: false, min_len: 5, max_len: 10}]; // 旧密码
  string new_password = 2 [(validate.rules).string = {ignore_empty: false, min_len: 5, max_len: 10}]; // 新密码
}

// 管理员查询后台用户列表
message AdminListUserReq {
  uint32 login_type = 1;  // 登录类型
  string nickname = 2;    // 昵称
  uint32 current = 3;     // 当前页码
  uint32 size = 4;        // 页码条数
}

message AdminListUserRsp {
  // 公共字段
  uint32 code = 1;      // 返回码
  string message = 2;   // 返回信息
  string trace_id = 3;  // 链路id
  string stack = 4;     // 异常堆栈
  // 数据
  repeated UserDetail data = 5;  // 用户信息
}

service User {
  // 管理员登陆
  rpc AdminLogin(AdminLoginReq) returns (AdminLoginRsp) {
    option (google.api.http) = {
      post: "/user/v1/admin/users/login"
      body: "*"
    };
  }
  // 管理员修改密码
  rpc AdminUpdatePwd(AdminUpdatePwdReq) returns (BaseResponse) {
    option (google.api.http) = {
      put: "/user/v1/admin/users/password"
      body: "*"
    };
  }
  // 管理员查询后台用户列表
  rpc AdminListUsers(AdminListUserReq) returns (AdminListUserRsp) {
    option (google.api.http) = {
      get: "/user/v1/admin/users"
    };
  }


}
